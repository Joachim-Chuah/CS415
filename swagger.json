{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple Items API",
    "description": "A simple API for managing items"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/items": {
      "get": {
        "summary": "List all items",
        "description": "Returns all items from the store.",
        "responses": {
          "200": {
            "description": "A list of items.",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an item",
        "description": "Creates a new item in the store.",
        "parameters": [
          {
            "in": "body",
            "name": "item",
            "description": "Item to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item created.",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          }
        }
      }
    },
    "/items/{id}": {
      "put": {
        "summary": "Update an item",
        "description": "Updates an existing item.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "ID of the item to update"
          },
          {
            "in": "body",
            "name": "item",
            "description": "Item data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated.",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item",
        "description": "Deletes an item from the store.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "ID of the item to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted."
          }
        }
      }
    },
    "/config": {
      "get": {
        "summary": "Get environment configuration",
        "description": "Returns a list of the current environment variables as key-value pairs.",
        "responses": {
          "200": {
            "description": "A list of environment variables.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fib": {
      "get": {
        "summary": "Generate Fibonacci sequence",
        "description": "Generates a Fibonacci sequence up to the specified length.",
        "parameters": [
          {
            "name": "length",
            "in": "query",
            "description": "The length of the Fibonacci sequence to generate",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A Fibonacci sequence.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "Invalid request parameters."
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": ["name"]
    },
    "ItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/Item"
        }
      },
      "required": ["id", "item"]
    }
  }
}
